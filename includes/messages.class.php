<?php

/**
 * Class in charge to manage messages generated by app.
 * It is important because if maybe a translation is required.
 * @package default
 */

class messages{

	//Class Attributes
	private $reload = false;
	private $current_message = '';
	private $init_message = "Quick help:
C N N :		Command C creates a canvas of NxN
L N N M M :	Command L draws a line from point (N,N) until (M,M) inside of canvas
R N N M M :	Command R draws a rectangle from point (N,N) until (M,M) inside of canvas
B N N char:	Command B fills the space arround point (N,N) with character char";
	private $messages        = array(
								'general' => array(
									'ok' => array(
										'Command OK',
										),
									'error' => array(
										'Command incorrect',
										),
									),
									
								'canvas' => array(
									'ok' => array(
										),
									'error' => array(
										'Command Error : Size of canvas cannot be less than 1 x 1 or greater than 100 x 20',
										),
									),
								'line' => array(
									'ok' => array(
										),
									'error' => array(
										'Line cannot be printed between given coordinates',
										'Create a canvas first',
										),
									),
								'rec' => array(
									'ok' => array(
										),
									'error' => array(
										'Rectangle cannot be created',
										),
									),
								);

	/**
	 * This function translate a key in a message saved in the attribute $messages.
	 * @param string $key 
	 * @return boolean
	 */
	public function set_message( $key = '' ){
		$key_array = explode('-', $key);

		//print_r( $key_array );
		//print_r( $this->messages[$key_array[0]][$key_array[1]][$key_array[2]] );exit;

		if( $key == 'quit' ){
			$this->current_message = $this->get_init_message();
			return true;
		}
		elseif( $key && count($key_array) == 3 ){
			$this->current_message = $this->messages[$key_array[0]][$key_array[1]][$key_array[2]];
			return true;
		}
		else
			return false;
	}

	/**
	 * This function returns the welcome message for the user (help message)
	 * @param boolean $reload 
	 * @return string
	 */
	public function get_init_message(){
		return $this->init_message;
	}

	/**
	 * This function is in charge to return the value saved in the attribute $current_message
	 * @return string
	 */
	public function get_current_message(){
		return $this->current_message;
	}

	public function is_reload(){
		$this->reload = true;
		return true;
	}

	public function get_reload(){
		$reply = $this->reload;
		$this->reload = false;
		return $reply;
	}

}
